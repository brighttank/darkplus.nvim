local c = require 'darkplus.colors'
local config = require 'darkplus.config'

local M = {}

M.base = {
  -- Styles
  Bold = { style = 'bold' },
  Italic = { style = 'italic' },
  Underlined = { style = 'underline' },

  Boolean = { fg = c.orange },
  Character = { fg = c.green },
  ColorColumn = { bg = c.dark },
  Comment = { fg = c.gray, style = 'italic' },
  Conceal = { fg = c.accent, bg = config.transparent_background and 'NONE' or c.bg },
  Conditional = { fg = c.purple },
  Constant = { fg = c.orange },
  Cursor = { fg = c.cursor_fg, bg = c.cursor_bg },
  CursorColumn = { bg = c.dark },
  CursorIM = { fg = c.cursor_fg, bg = c.cursor_bg },
  CursorLine = { bg = c.dark },
  CursorLineNr = { fg = c.light_gray, style = 'bold' },
  Debug = { fg = c.red },
  Define = { fg = c.purple },
  Delimiter = { fg = c.fg },
  DiffAdd = { fg = c.dark, bg = c.diff_add },
  DiffAdded = { fg = c.diff_add },
  DiffChange = { fg = c.dark, bg = c.diff_change, style = 'underline' },
  DiffDelete = { fg = c.dark, bg = c.diff_delete },
  DiffRemoved = { fg = c.diff_delete },
  DiffText = { fg = c.dark, bg = c.diff_text },
  DiffFile = { fg = c.cyan },
  DiffIndexLine = { fg = c.gray },
  Directory = { fg = c.blue },
  EndOfBuffer = { fg = c.bg },
  Error = { fg = c.error_red, bg = c.bg, style = 'bold' },
  ErrorMsg = { fg = c.error_red, bg = c.bg, style = 'bold' },
  Exception = { fg = c.purple },
  Float = { fg = c.orange },
  FloatBorder = { fg = c.gray, bg = c.dark },
  FoldColumn = { fg = c.accent, bg = c.dark },
  Folded = { fg = c.accent, bg = c.dark },
  Function = { fg = c.blue },
  Identifier = { fg = c.fg },
  Ignore = { fg = c.cyan, bg = c.bg, style = 'bold' },
  IncSearch = { fg = c.light_gray, bg = c.search_blue },
  Include = { fg = c.purple },
  Keyword = { fg = c.purple },
  Label = { fg = c.blue },
  LineNr = { fg = c.context },
  Macro = { fg = c.purple },
  MatchParen = { fg = c.hint_blue, bg = c.bg, style = 'underline' },
  MatchParenCur = { style = 'underline' },
  MatchWord = { style = 'underline' },
  MatchWordCur = { style = 'underline' },
  ModeMsg = { fg = c.fg, bg = c.bg },
  MoreMsg = { fg = c.orange },
  MsgArea = { fg = c.fg, bg = config.transparent_background and 'NONE' or c.bg },
  MsgSeparator = { fg = c.fg, bg = c.bg },
  NonText = { fg = c.context },
  Normal = { fg = c.fg, bg = config.transparent_background and 'NONE' or c.bg },
  NormalFloat = { bg = c.dark },
  NormalNC = { fg = c.fg, bg = config.transparent_background and 'NONE' or c.bg },
  Number = { fg = c.orange },
  Operator = { fg = c.purple },
  Pmenu = { fg = c.light_gray, bg = c.popup_back },
  PmenuSbar = { bg = c.dark },
  PmenuSel = { fg = c.dark, bg = c.blue },
  PmenuThumb = { bg = c.gray },
  PreCondit = { fg = c.purple },
  PreProc = { fg = c.purple },
  Question = { fg = c.orange },
  QuickFixLine = { bg = c.dark_gray },
  Repeat = { fg = c.purple },
  Search = { fg = c.light_gray, bg = c.search_blue },
  SignColumn = { bg = c.bg },
  Special = { fg = c.purple },
  SpecialChar = { fg = c.fg },
  SpecialComment = { fg = c.gray },
  SpecialKey = { fg = c.blue, style = 'bold' },
  SpellBad = { fg = c.error_red, style = 'underline' },
  SpellCap = { fg = c.yellow, style = 'underline' },
  SpellLocal = { fg = c.green, style = 'underline' },
  SpellRare = { fg = c.purple, style = 'underline' },
  Statement = { fg = c.purple },
  StatusLine = { fg = c.dark },
  StatusLineNC = { fg = c.dark },
  StatusLineSeparator = { fg = c.dark },
  StatusLineTerm = { fg = c.dark },
  StatusLineTermNC = { fg = c.dark },
  StorageClass = { fg = c.cyan },
  String = { fg = c.green },
  Structure = { fg = c.purple },
  Substitute = { fg = c.light_gray, bg = c.search_orange },
  TabLine = { fg = c.light_gray, bg = c.dark },
  TabLineFill = { fg = c.fg, bg = c.dark },
  TabLineSel = { fg = c.fg, bg = c.dark },
  Tag = { fg = c.blue },
  TermCursor = { fg = c.cursor_fg, bg = c.cursor_bg },
  TermCursorNC = { fg = c.cursor_fg, bg = c.cursor_bg },
  Title = { fg = c.blue, style = 'bold' },
  Todo = { fg = c.red, bg = c.bg, style = 'bold' },
  Type = { fg = c.yellow },
  Typedef = { fg = c.purple },
  Variable = { fg = c.cyan },
  VertSplit = { fg = c.bg, bg = c.dark },
  Visual = { bg = c.ui_blue },
  VisualNOS = { bg = c.dark },
  WarningMsg = { fg = c.error_red, bg = c.bg },
  Whitespace = { fg = c.gray },
  WildMenu = { fg = c.dark, bg = c.blue },
  lCursor = { fg = c.cursor_fg, bg = c.cursor_bg },
  -- Markdown
  markdownBlockquote = { fg = c.accent },
  markdownBold = { fg = c.yellow, style = 'bold' },
  markdownCode = { fg = c.green },
  markdownCodeBlock = { fg = c.green },
  markdownCodeDelimiter = { fg = c.green },
  markdownH1 = { fg = c.blue },
  markdownH2 = { fg = c.blue },
  markdownH3 = { fg = c.blue },
  markdownH4 = { fg = c.blue },
  markdownH5 = { fg = c.blue },
  markdownH6 = { fg = c.blue },
  markdownHeadingDelimiter = { fg = c.blue },
  markdownHeadingRule = { fg = c.accent },
  markdownId = { fg = c.purple },
  markdownIdDeclaration = { fg = c.blue },
  markdownIdDelimiter = { fg = c.light_gray },
  markdownItalic = { style = 'italic' },
  markdownLinkDelimiter = { fg = c.light_gray },
  markdownLinkText = { fg = c.blue },
  markdownListMarker = { fg = c.red },
  markdownOrderedListMarker = { fg = c.red },
  markdownRule = { fg = c.accent },
  markdownUrl = { fg = c.cyan, style = 'underline' },
}

M.plugins = {
  -- Buffer
  BufferCurrent = { fg = c.fg, bg = c.bg },
  BufferCurrentIndex = { fg = c.fg, bg = c.bg },
  BufferCurrentMod = { fg = c.info_yellow, bg = c.bg },
  BufferCurrentSign = { fg = c.hint_blue, bg = c.bg },
  BufferCurrentTarget = { fg = c.red, bg = c.bg, style = 'bold' },
  BufferInactive = { fg = c.gray, bg = c.dark },
  BufferInactiveIndex = { fg = c.gray, bg = c.dark },
  BufferInactiveMod = { fg = c.info_yellow, bg = c.dark },
  BufferInactiveSign = { fg = c.gray, bg = c.dark },
  BufferInactiveTarget = { fg = c.red, bg = c.dark, style = 'bold' },
  BufferVisible = { fg = c.fg, bg = c.bg },
  BufferVisibleIndex = { fg = c.fg, bg = c.bg },
  BufferVisibleMod = { fg = c.info_yellow, bg = c.bg },
  BufferVisibleSign = { fg = c.gray, bg = c.bg },
  BufferVisibleTarget = { fg = c.red, bg = c.bg, style = 'bold' },
  -- Cmp
  CmpDocumentation = { fg = c.fg, bg = c.none },
  CmpDocumentationBorder = { fg = c.gray, bg = c.none },
  CmpItemAbbr = { fg = c.fg, bg = c.none },
  CmpItemAbbrDeprecated = { fg = c.gray, bg = c.none },
  CmpItemAbbrMatch = { fg = c.cyan, bg = c.none },
  CmpItemAbbrMatchFuzzy = { fg = c.cyan, bg = c.none },
  CmpItemKind = { fg = c.blue, bg = c.none },
  CmpItemMenu = { fg = c.light_gray, bg = c.none },
  -- Dashboard
  DashboardCenter = { fg = c.purple },
  DashboardFooter = { fg = c.cyan },
  DashboardHeader = { fg = c.blue },
  -- Debug
  debugBreakpoint = { fg = c.red, style = 'reverse' },
  debugPc = { bg = c.cyan },
  -- Diffview
  DiffViewNormal = { fg = c.gray, bg = c.dark },
  DiffviewFilePanelDeletion = { fg = c.diff_delete },
  DiffviewFilePanelInsertion = { fg = c.diff_add },
  DiffviewStatusAdded = { fg = c.diff_add },
  DiffviewStatusDeleted = { fg = c.diff_delete },
  DiffviewStatusModified = { fg = c.diff_change },
  DiffviewStatusRenamed = { fg = c.diff_change },
  DiffviewVertSplit = { bg = c.bg },
  -- Git
  GitSignsAdd = { fg = c.diff_add },
  GitSignsChange = { fg = c.diff_change },
  GitSignsDelete = { fg = c.diff_delete },
  GitGutterAdd = { fg = c.diff_add },
  GitGutterChange = { fg = c.diff_change },
  GitGutterDelete = { fg = c.diff_delete },
  -- Indent-blankline
  IndentBlanklineChar = { fg = c.dark_gray },
  IndentBlanklineContextChar = { fg = c.context },
  IndentBlanklineSpaceChar = { fg = c.blue },
  IndentBlanklineSpaceCharBlankline = { fg = c.info_yellow },
  -- Lsp
  DiagnosticFloatingError = { fg = c.error_red },
  DiagnosticFloatingHint = { fg = c.hint_blue },
  DiagnosticFloatingInfo = { fg = c.info_yellow },
  DiagnosticFloatingWarn = { fg = c.warning_orange },
  DiagnosticSignError = { fg = c.error_red },
  DiagnosticSignHint = { fg = c.hint_blue },
  DiagnosticSignInfo = { fg = c.info_yellow },
  DiagnosticSignWarn = { fg = c.warning_orange },
  DiagnosticUnderlineError = { style = 'underline' },
  DiagnosticUnderlineHint = { style = 'underline' },
  DiagnosticUnderlineInfo = { style = 'underline' },
  DiagnosticUnderlineWarn = { style = 'underline' },
  LspDiagnosticsDefaultError = { fg = c.error_red },
  LspDiagnosticsDefaultHint = { fg = c.hint_blue },
  LspDiagnosticsDefaultInformation = { fg = c.info_yellow },
  LspDiagnosticsDefaultWarning = { fg = c.warning_orange },
  LspDiagnosticsError = { fg = c.error_red },
  LspDiagnosticsFloatingError = { fg = c.error_red },
  LspDiagnosticsFloatingHint = { fg = c.hint_blue },
  LspDiagnosticsFloatingInformation = { fg = c.info_yellow },
  LspDiagnosticsFloatingWarning = { fg = c.warning_orange },
  LspDiagnosticsHint = { fg = c.hint_blue },
  LspDiagnosticsInformation = { fg = c.info_yellow },
  LspDiagnosticsSignError = { fg = c.error_red },
  LspDiagnosticsSignHint = { fg = c.hint_blue },
  LspDiagnosticsSignInformation = { fg = c.info_yellow },
  LspDiagnosticsSignWarning = { fg = c.warning_orange },
  LspDiagnosticsUnderlineError = { style = 'underline' },
  LspDiagnosticsUnderlineHint = { style = 'underline' },
  LspDiagnosticsUnderlineInformation = { style = 'underline' },
  LspDiagnosticsUnderlineWarning = { style = 'underline' },
  LspDiagnosticsVirtualTextError = { fg = c.error_red },
  LspDiagnosticsVirtualTextHint = { fg = c.hint_blue },
  LspDiagnosticsVirtualTextInformation = { fg = c.info_yellow },
  LspDiagnosticsVirtualTextWarning = { fg = c.warning_orange },
  LspDiagnosticsWarning = { fg = c.warning_orange },
  LspReferenceRead = { bg = c.fg_gutter, style = 'bold' },
  LspReferenceText = { bg = c.fg_gutter, style = 'bold' },
  LspReferenceWrite = { bg = c.fg_gutter, style = 'bold' },
  -- Neogit
  NeogitBranch = { fg = c.magenta },
  NeogitRemote = { fg = c.purple },
  NeogitHunkHeader = { fg = c.accent, bg = c.dark },
  NeogitDiffContext = { fg = c.accent, bg = c.bg },
  NeogitDiffAdd = { fg = c.diff_add, bg = c.dark },
  NeogitDiffDelete = { fg = c.diff_delete, bg = c.dark },
  -- Neogit...Highlight is when group is focused
  NeogitHunkHeaderHighlight = { fg = c.accent, bg = c.dark },
  NeogitDiffContextHighlight = { fg = c.accent, bg = c.bg },
  NeogitDiffAddHighlight = { fg = c.diff_add, bg = c.dark },
  NeogitDiffDeleteHighlight = { fg = c.diff_delete, bg = c.dark },
  -- Nvim-tree
  NvimTreeCursorLine = { bg = c.bg },
  NvimTreeExecFile = { fg = c.green },
  NvimTreeFolderIcon = { fg = c.blue },
  NvimTreeFolderName = { fg = c.blue },
  NvimTreeGitDeleted = { fg = c.diff_delete },
  NvimTreeGitDirty = { fg = c.diff_add },
  NvimTreeGitMerge = { fg = c.diff_change },
  NvimTreeGitNew = { fg = c.diff_add },
  NvimTreeGitRenamed = { fg = c.diff_change },
  NvimTreeGitStaged = { fg = c.diff_add },
  NvimTreeImageFile = { fg = c.purple },
  NvimTreeIndentMarker = { fg = c.gray },
  NvimTreeNormal = { fg = c.accent, bg = c.dark },
  NvimTreeOpenedFolderName = { fg = c.blue, style = 'italic' },
  NvimTreeRootFolder = { fg = c.gray, style = 'bold' },
  NvimTreeSpecialFile = { fg = c.orange },
  NvimTreeSymlink = { fg = c.cyan },
  NvimTreeVertSplit = { fg = c.dark_gray },
  -- Telescope
  TelescopeBorder = { fg = c.cyan, bg = config.transparent_background and 'NONE' or c.bg },
  TelescopeMatching = { fg = c.info_yellow, style = 'bold' },
  TelescopePromptPrefix = { fg = c.purple },
  TelescopeSelection = { fg = c.hint_blue },
  -- Treesitter
  TSAnnotation = { fg = c.soft_green_2 },
  TSAttribute = { fg = c.soft_orange_2 },
  TSBoolean = { fg = c.soft_blue_2 },
  TSCharacter = { fg = c.orange },
  TSComment = { fg = c.soft_green_2 },
  TSConditional = { fg = c.blue },
  TSConstBuiltin = { fg = c.blue },
  TSConstMacro = { fg = c.cyan },
  TSConstant = { fg = c.yellow },
  TSConstructor = { fg = c.cyan },
  TSEmphasis = { style = 'italic' },
  TSError = { fg = c.error_red },
  TSException = { fg = c.purple },
  TSField = { fg = c.light_blue },
  TSFloat = { fg = c.light_green },
  TSFuncBuiltin = { fg = c.yellow },
  TSFuncMacro = { fg = c.yellow },
  TSFunction = { fg = c.yellow },
  TSInclude = { fg = c.purple },
  TSKeyword = { fg = c.blue },
  TSKeywordFunction = { fg = c.blue },
  TSKeywordOperator = { fg = c.blue },
  TSKeywordReturn = { fg = c.purple },
  TSLabel = { fg = c.light_blue },
  TSLiteral = { fg = c.yellow_orange },
  TSMethod = { fg = c.yellow },
  TSNamespace = { fg = c.cyan },
  TSNumber = { fg = c.light_green },
  TSOperator = { fg = c.fg },
  TSParameter = { fg = c.light_blue },
  TSParameterReference = { fg = c.light_blue },
  TSProperty = { fg = c.light_blue },
  TSPunctBracket = { fg = c.fg },
  TSPunctDelimiter = { fg = c.fg },
  TSPunctSpecial = { fg = c.fg },
  TSQueryLinterError = { fg = c.warning_orange },
  TSRepeat = { fg = c.purple },
  TSString = { fg = c.orange },
  TSStringEscape = { fg = c.yellow_orange },
  TSStringRegex = { fg = c.orange },
  TSStrong = { fg = c.yellow_orange },
  TSStructure = { fg = c.light_blue },
  TSSymbol = { fg = c.light_blue },
  TSTag = { fg = c.blue },
  TSTagDelimiter = { fg = c.gray },
  TSText = { fg = c.fg },
  TSTitle = { fg = c.blue, style = 'bold' },
  TSType = { fg = c.cyan },
  TSTypeBuiltin = { fg = c.blue },
  TSURI = { fg = c.yellow_orange, style = 'underline' },
  TSUnderline = { style = 'underline' },
  TSVariable = { fg = c.light_blue },
  TSVariableBuiltin = { fg = c.light_blue },
}

Here is the list of `option` tags with their `name` attributes and the corresponding `FOREGROUND` values:

local c2 = {
BAD_CHARACTER = 'f44747',
BASH_BACKQUOTE = 'cd905b',
BASH_EXTERNAL_COMMAND = 'dcdcaa',
BASH_HERE_DOC_END = 'c586c0',
BASH_HERE_DOC_START = 'c586c0',
BASH_VAR_DEF = 'd3d3c8',
BASH_VAR_USE = '9cdcfe',
CMD_EXPRESSION = 'dcdcaa',
CMD_LABEL = 'd3d3c8',
CMD_LABEL_REFERENCE = 'd3d3c8',
CSS_ATTRIBUTE_NAME = '9cdcfe',
CSS_CLASS_NAME = 'd7ba7d',
CSS_FUNCTION = 'dcdcaa',
CSS_IDENT = 'd4d4d4',
CSS_IMPORTANT = '569cd6',
CSS_KEYWORD = 'c586c0',
CSS_PSEUDO = 'd7ba7d',
CSS_TAG_NAME = 'd7ba7d',
CSS_URL = '9cdcfe',
CTRL_CLICKABLE = '569cd6',

DEFAULT_BLOCK_COMMENT = 'soft_green_2',
DEFAULT_CLASS_NAME = 'teal_2',
DEFAULT_CLASS_REFERENCE = 'teal_2',
DEFAULT_CONSTANT = 'light_gray_5',
DEFAULT_DOC_COMMENT = 'soft_green_3',
DEFAULT_DOC_COMMENT_TAG = 'soft_blue_4',
DEFAULT_DOC_COMMENT_TAG_VALUE = 'light_blue_3',
DEFAULT_DOC_MARKUP = 'soft_blue_4',
DEFAULT_FUNCTION_CALL = 'beige_2',
DEFAULT_FUNCTION_DECLARATION = 'beige_3',
DEFAULT_GLOBAL_VARIABLE = 'light_blue_2',
DEFAULT_IDENTIFIER = 'beige_3',
DEFAULT_INSTANCE_FIELD = 'light_blue_3',
DEFAULT_INTERFACE_NAME = 'dark_cyan',
DEFAULT_INVALID_STRING_ESCAPE = 'bright_red',
DEFAULT_KEYWORD = 'soft_blue_2',
DEFAULT_LINE_COMMENT = 'soft_green_2',
DEFAULT_LOCAL_VARIABLE = 'light_blue_2',
DEFAULT_METADATA = 'teal_2',
DEFAULT_NUMBER = 'soft_green_4',
DEFAULT_STATIC_FIELD = 'soft_orange_2',
DEFAULT_STATIC_METHOD = 'soft_orange_2',
DEFAULT_STRING = 'tan_2',
DEFAULT_VALID_STRING_ESCAPE = 'tan_3',

FOLLOWED_HYPERLINK_ATTRIBUTES = '569cd6',
GO_BLOCK_COMMENT = '6a9955',
GO_BUILTIN_CONSTANT = '569cd6',
GO_BUILTIN_FUNCTION = 'dcdcaa',
GO_BUILTIN_FUNCTION_CALL = 'dcdcaa',
GO_BUILTIN_TYPE_REFERENCE = '4ec9b0',
GO_BUILTIN_VARIABLE = '569cd6',
GO_COMMENT_KEYWORD = '6a9955',
GO_EXPORTED_FUNCTION = 'dcdcaa',
GO_EXPORTED_FUNCTION_CALL = 'dcdcaa',
GO_EXPORTED_INTERFACE_REFERENCE = 'd4d4d4',
GO_EXPORTED_STRUCT_REFERENCE = 'd4d4d4',
GO_FUNCTION_PARAMETER = 'c8c8c8',
GO_KEYWORD = 'c586c0',
GO_LABEL = 'c8c8c8',
GO_LINE_COMMENT = '6a9955',
GO_LOCAL_CONSTANT = 'c8c8c8',
GO_LOCAL_FUNCTION = 'dcdcaa',
GO_LOCAL_FUNCTION_CALL = 'dcdcaa',
GO_LOCAL_INTERFACE_REFERENCE = 'd4d4d4',
GO_LOCAL_STRUCT_REFERENCE = 'd4d4d4',
GO_LOCAL_VARIABLE = 'd4d4d4',
GO_METHOD_RECEIVER = 'c8c8c8',
GO_PACKAGE = 'd4d4d4',
GO_PACKAGE_EXPORTED_CONSTANT = '9cdcfe',
GO_PACKAGE_EXPORTED_INTERFACE = 'd4d4d4',
GO_PACKAGE_EXPORTED_STRUCT = 'd4d4d4',
GO_PACKAGE_EXPORTED_VARIABLE = 'd4d4d4',
GO_PACKAGE_LOCAL_CONSTANT = '9cdcfe',
GO_PACKAGE_LOCAL_INTERFACE = 'd4d4d4',
GO_PACKAGE_LOCAL_STRUCT = '4ec9b0',
GO_PACKAGE_LOCAL_VARIABLE = 'd4d4d4',
GO_SCOPE_VARIABLE = 'd4d4d4',
GO_STRUCT_EXPORTED_MEMBER = 'd4d4d4',
GO_STRUCT_LOCAL_MEMBER = 'd4d4d4',
GO_TYPE_REFERENCE = 'd4d4d4',
GO_TYPE_SPECIFICATION = 'd4d4d4',
GO_VALID_STRING_ESCAPE = 'd7ba7d',
HTML_ATTRIBUTE_NAME = '9cdcfe',
HTML_ATTRIBUTE_VALUE = 'ce9178',
HTML_TAG = '808080',
HTML_TAG_NAME = '569cd6',
HYPERLINK_ATTRIBUTES = '569cd6',
KOTLIN_LABEL = '499cd5',
MARKDOWN_BLOCK_QUOTE = '699856',
MARKDOWN_BLOCK_QUOTE_MARKER = '699856',
MARKDOWN_BOLD = '499cd5',
MARKDOWN_CODE_BLOCK = 'cd905b',
MARKDOWN_CODE_FENCE = 'cd905b',
MARKDOWN_CODE_SPAN = 'cd905b',
MARKDOWN_HEADER_LEVEL_1 = '4a9dd4',
MARKDOWN_HEADER_LEVEL_2 = '499cd5',
MARKDOWN_HEADER_LEVEL_3 = '499cd5',
MARKDOWN_HEADER_LEVEL_4 = '499cd5',
MARKDOWN_HEADER_LEVEL_5 = '4a9dd4',
MARKDOWN_HEADER_LEVEL_6 = '499cd5',
MARKDOWN_INLINE_HTML = '499cd5',
MARKDOWN_LINK_TEXT = 'ce9178',
MARKDOWN_LINK_TITLE = 'cd905b',
MARKDOWN_ORDERED_LIST = '499cd5',
MARKDOWN_UNORDERED_LIST = '499cd5',
OC_CONCEPT = 'd4d4d4',
OC_CONDITIONALLY_NOT_COMPILED = '808066',
OC_DIRECTIVE = 'c586a1',
OC_ENUM_CONST = '4fc1ff',
OC_FUNCTION_DECLARATION = 'dcdcaa',
OC_KEYWORD = '499cd5',
OC_MACRONAME = '358cd6',
OC_NAMESPACE_LIKE = '4cc9b0',
OC_OVERLOADED_OPERATOR = 'dcdcaa',
OC_STRUCT_LIKE = '4cc9b0',
OC_TYPEDEF = '4cc9b0',
PHP_EXEC_COMMAND_ID = 'cd905b',
PHP_HEREDOC_ID = 'd3d3c8',
PHP_PARAMETER = '94dbfd',
PHP_THIS_VAR = '499cd5',
PHP_VAR = '94dbfd',
PY_BUILTIN_NAME = '39c8b0',
PY_DECORATOR = '39c8b0',
PY_KEYWORD_ARGUMENT = '94dbfd',
PY_PREDEFINED_DEFINITION = 'dcdcaa',
PY_PREDEFINED_USAGE = 'dcdcaa',
PY_SELF_PARAMETER = '569cd5',
REGEXP_CHAR_CLASS = 'd16969',
ReSharper_CSHARP_BRACES = 'c7c7c7',
ReSharper_CSHARP_CLASS_IDENTIFIER = '38b9b0',
ReSharper_CSHARP_DOC_COMMENT_ATTRIBUTE = 'cecece',
ReSharper_CSHARP_DOC_COMMENT_ATTRIBUTE_VALUE = 'cdcc96',
ReSharper_CSHARP_DOC_COMMENT_TAG_NAME = '58724f',
ReSharper_CSHARP_ENUM_IDENTIFIER = 'b8d7a3',
ReSharper_CSHARP_FIELD_IDENTIFIER = 'dcdcdc',
ReSharper_CSHARP_INTERFACE_IDENTIFIER = 'b8d7a3',
ReSharper_CSHARP_NAMESPACE_IDENTIFIER = 'dcdcdc',
ReSharper_CSHARP_PARAMETER_IDENTIFIER = '9cdcfe',
ReSharper_CSHARP_PROPERTY_IDENTIFIER = 'ffffff',
ReSharper_CSHARP_STATIC_FIELD_IDENTIFIER = 'dcdcdc',
ReSharper_CSHARP_STATIC_METHOD_IDENTIFIER = 'dcdcdc',
ReSharper_CSHARP_TYPE_PARAMETER_IDENTIFIER = 'b6d5a2',
SEARCH_RESULT_ATTRIBUTES = '004fff',
SQL_COLUMN = 'd3d3c8',
SQL_DATABASE_OBJECT = 'd3d3c8',
SQL_PROCEDURE = 'dcdcaa',
SQL_SCHEMA = 'd3d3c8',
SQL_TABLE = 'd3d3c8',
TEXT = 'd4d4d4',
TODO_DEFAULT_ATTRIBUTES = 'a8c023',
TS_PRIMITIVE_TYPES = '39c8b0',
TYPE_PARAMETER_NAME_ATTRIBUTES = '39c8b0',
WARNING_ATTRIBUTES = 'be9117',
XML_ATTRIBUTE_NAME = '9cdcfe',
XML_ENTITY_REFERENCE = '4ec9b0',
XML_PROLOGUE = 'd4d4d4',
XML_TAG = 'd4d4d4',
XPATH_XPATH_VARIABLE = '94dbfd',
}

return M
